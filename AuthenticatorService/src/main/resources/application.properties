spring.application.name=AuthenticatorService
# MySQL DB Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/casestudy1
spring.datasource.username=root
spring.datasource.password=Aran2024#
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Hibernate DDL Auto (can be changed to 'update' or 'create-drop' for development)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQLDialect
# Enable JWT (Example)
jwt.secret=mysecretkey
jwt.expiration=3600000
# Change the port to 9090
server.port=8100

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.security.filter.chain.content-negotiation.parameter-strategy=ignore
spring.security.filter.chain.any-request.authorized=permitAll
spring.security.filter.chain.request-matcher.path.pattern=/api/**
spring.security.filter.chain.request-matcher.path.authenticated=true
# CSRF Configuration
spring.security.csrf.disabled=true
# CORS Configuration
spring.web.cors.allowed-origins=http://localhost:3000
spring.web.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.web.cors.allowed-headers=*
spring.web.cors.allow-credentials=true
spring.web.cors.max-age=3600