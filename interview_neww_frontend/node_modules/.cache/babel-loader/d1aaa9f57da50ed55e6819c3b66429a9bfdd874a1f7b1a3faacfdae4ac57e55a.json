{"ast":null,"code":"import axios from \"axios\";\n\n// Base URL for the backend Interview Scheduler Service\nconst BASE_URL = \"http://localhost:8085/interview\";\nconst InterviewService = {\n  /**\r\n   * Create a new interview.\r\n   * @param {Object} interview - The interview details (JSON object).\r\n   * @param {number} jobApplicationId - The ID of the associated job application.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\n  createInterview: (interview, jobApplicationId) => {\n    return axios.post(`${BASE_URL}/create/${jobApplicationId}`, interview);\n  },\n  /**\r\n   * Update an existing interview.\r\n   * @param {number} interviewId - The ID of the interview to update.\r\n   * @param {Object} updatedInterview - The updated interview details.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\n  updateInterview: (interviewId, updatedInterview) => {\n    return axios.put(`${BASE_URL}/update/${interviewId}`, updatedInterview);\n  },\n  /**\r\n   * Cancel an existing interview.\r\n   * @param {number} interviewId - The ID of the interview to cancel.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\n  cancelInterview: interviewId => {\n    return axios.put(`${BASE_URL}/cancel/${interviewId}`);\n  },\n  /**\r\n   * Get all interviews scheduled by a specific employer.\r\n   * @param {number} employerId - The ID of the employer.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\n  getInterviewsByEmployerId: employerId => {\n    return axios.get(`${BASE_URL}/employer/${employerId}`);\n  },\n  /**\r\n   * Get all interviews scheduled for a specific job seeker.\r\n   * @param {number} seekerId - The ID of the job seeker.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\n  getInterviewsBySeekerId: seekerId => {\n    return axios.get(`${BASE_URL}/seeker/${seekerId}`);\n  }\n};\nexport default InterviewService;","map":{"version":3,"names":["axios","BASE_URL","InterviewService","createInterview","interview","jobApplicationId","post","updateInterview","interviewId","updatedInterview","put","cancelInterview","getInterviewsByEmployerId","employerId","get","getInterviewsBySeekerId","seekerId"],"sources":["C:/Users/kdigarse/Documents/interview_neww/src/services/interviewService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\n// Base URL for the backend Interview Scheduler Service\r\nconst BASE_URL = \"http://localhost:8085/interview\";\r\n\r\nconst InterviewService = {\r\n  /**\r\n   * Create a new interview.\r\n   * @param {Object} interview - The interview details (JSON object).\r\n   * @param {number} jobApplicationId - The ID of the associated job application.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\r\n  createInterview: (interview, jobApplicationId) => {\r\n    return axios.post(`${BASE_URL}/create/${jobApplicationId}`, interview);\r\n  },\r\n\r\n  /**\r\n   * Update an existing interview.\r\n   * @param {number} interviewId - The ID of the interview to update.\r\n   * @param {Object} updatedInterview - The updated interview details.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\r\n  updateInterview: (interviewId, updatedInterview) => {\r\n    return axios.put(`${BASE_URL}/update/${interviewId}`, updatedInterview);\r\n  },\r\n\r\n  /**\r\n   * Cancel an existing interview.\r\n   * @param {number} interviewId - The ID of the interview to cancel.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\r\n  cancelInterview: (interviewId) => {\r\n    return axios.put(`${BASE_URL}/cancel/${interviewId}`);\r\n  },\r\n\r\n  /**\r\n   * Get all interviews scheduled by a specific employer.\r\n   * @param {number} employerId - The ID of the employer.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\r\n  getInterviewsByEmployerId: (employerId) => {\r\n    return axios.get(`${BASE_URL}/employer/${employerId}`);\r\n  },\r\n\r\n  /**\r\n   * Get all interviews scheduled for a specific job seeker.\r\n   * @param {number} seekerId - The ID of the job seeker.\r\n   * @returns {Promise} - Axios promise with the response.\r\n   */\r\n  getInterviewsBySeekerId: (seekerId) => {\r\n    return axios.get(`${BASE_URL}/seeker/${seekerId}`);\r\n  },\r\n};\r\n\r\nexport default InterviewService;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,QAAQ,GAAG,iCAAiC;AAElD,MAAMC,gBAAgB,GAAG;EACvB;AACF;AACA;AACA;AACA;AACA;EACEC,eAAe,EAAEA,CAACC,SAAS,EAAEC,gBAAgB,KAAK;IAChD,OAAOL,KAAK,CAACM,IAAI,CAAC,GAAGL,QAAQ,WAAWI,gBAAgB,EAAE,EAAED,SAAS,CAAC;EACxE,CAAC;EAED;AACF;AACA;AACA;AACA;AACA;EACEG,eAAe,EAAEA,CAACC,WAAW,EAAEC,gBAAgB,KAAK;IAClD,OAAOT,KAAK,CAACU,GAAG,CAAC,GAAGT,QAAQ,WAAWO,WAAW,EAAE,EAAEC,gBAAgB,CAAC;EACzE,CAAC;EAED;AACF;AACA;AACA;AACA;EACEE,eAAe,EAAGH,WAAW,IAAK;IAChC,OAAOR,KAAK,CAACU,GAAG,CAAC,GAAGT,QAAQ,WAAWO,WAAW,EAAE,CAAC;EACvD,CAAC;EAED;AACF;AACA;AACA;AACA;EACEI,yBAAyB,EAAGC,UAAU,IAAK;IACzC,OAAOb,KAAK,CAACc,GAAG,CAAC,GAAGb,QAAQ,aAAaY,UAAU,EAAE,CAAC;EACxD,CAAC;EAED;AACF;AACA;AACA;AACA;EACEE,uBAAuB,EAAGC,QAAQ,IAAK;IACrC,OAAOhB,KAAK,CAACc,GAAG,CAAC,GAAGb,QAAQ,WAAWe,QAAQ,EAAE,CAAC;EACpD;AACF,CAAC;AAED,eAAed,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}