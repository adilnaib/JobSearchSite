{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kdigarse\\\\Documents\\\\interview_new\\\\src\\\\pages\\\\JobSeekerDashboard\\\\JobSeekerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./JobSeekerDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobSeekerDashboard = () => {\n  _s();\n  const [interviews, setInterviews] = useState([]);\n\n  // Fetch interviews for the logged-in job seeker (you'll need to set up the backend API for this)\n  useEffect(() => {\n    // For now, we'll mock the data\n    const mockInterviews = [{\n      id: 1,\n      employer: \"ABC Corp\",\n      position: \"Software Engineer\",\n      date: \"2024-12-15 10:00 AM\",\n      status: \"Scheduled\"\n    }, {\n      id: 2,\n      employer: \"XYZ Ltd\",\n      position: \"Product Manager\",\n      date: \"2024-12-16 02:00 PM\",\n      status: \"Scheduled\"\n    }];\n    setInterviews(mockInterviews);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jobseeker-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobseeker-header\",\n      children: \"Job Seeker Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scheduled-interviews\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Scheduled Interviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Employer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Position\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Interview Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: interviews.map(interview => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: interview.employer\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: interview.position\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: interview.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: interview.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, this)]\n          }, interview.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(JobSeekerDashboard, \"gxZAJ/uEld9fM0HUY5HJilLidZo=\");\n_c = JobSeekerDashboard;\nexport default JobSeekerDashboard;\nvar _c;\n$RefreshReg$(_c, \"JobSeekerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","JobSeekerDashboard","_s","interviews","setInterviews","mockInterviews","id","employer","position","date","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","interview","_c","$RefreshReg$"],"sources":["C:/Users/kdigarse/Documents/interview_new/src/pages/JobSeekerDashboard/JobSeekerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"./JobSeekerDashboard.css\";\r\n\r\nconst JobSeekerDashboard = () => {\r\n  const [interviews, setInterviews] = useState([]);\r\n\r\n  // Fetch interviews for the logged-in job seeker (you'll need to set up the backend API for this)\r\n  useEffect(() => {\r\n    // For now, we'll mock the data\r\n    const mockInterviews = [\r\n      {\r\n        id: 1,\r\n        employer: \"ABC Corp\",\r\n        position: \"Software Engineer\",\r\n        date: \"2024-12-15 10:00 AM\",\r\n        status: \"Scheduled\",\r\n      },\r\n      {\r\n        id: 2,\r\n        employer: \"XYZ Ltd\",\r\n        position: \"Product Manager\",\r\n        date: \"2024-12-16 02:00 PM\",\r\n        status: \"Scheduled\",\r\n      },\r\n    ];\r\n    setInterviews(mockInterviews);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"jobseeker-dashboard\">\r\n      <div className=\"jobseeker-header\">Job Seeker Dashboard</div>\r\n\r\n      <div className=\"scheduled-interviews\">\r\n        <h3>Your Scheduled Interviews</h3>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Employer</th>\r\n              <th>Position</th>\r\n              <th>Interview Date</th>\r\n              <th>Status</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {interviews.map((interview) => (\r\n              <tr key={interview.id}>\r\n                <td>{interview.employer}</td>\r\n                <td>{interview.position}</td>\r\n                <td>{interview.date}</td>\r\n                <td>{interview.status}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobSeekerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}