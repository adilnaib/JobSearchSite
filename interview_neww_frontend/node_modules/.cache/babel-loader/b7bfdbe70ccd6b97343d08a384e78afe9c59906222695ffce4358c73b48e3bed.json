{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kdigarse\\\\Documents\\\\interview_neww\\\\src\\\\pages\\\\EmployerDashboard\\\\EmployerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport InterviewService from \"../../services/interviewService\";\nimport CreateInterviewForm from \"./CreateInterviewForm\";\nimport \"./EmployerDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployerDashboard = () => {\n  _s();\n  const [interviews, setInterviews] = useState([]);\n  const [isFormVisible, setIsFormVisible] = useState(false);\n\n  // Fetch interviews for the employer\n  const fetchInterviews = async () => {\n    try {\n      const response = await InterviewService.getInterviewsByEmployerId(1); // Replace with employer ID\n      setInterviews(response.data);\n    } catch (error) {\n      console.error(\"Error fetching interviews:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchInterviews();\n  }, []);\n\n  // Function to handle interview creation\n  const handleInterviewCreated = newInterview => {\n    setInterviews(prev => [...prev, newInterview]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employer-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-btn\",\n      onClick: () => setIsFormVisible(true) // Show form on button click\n      ,\n      children: \"Create Interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), isFormVisible && /*#__PURE__*/_jsxDEV(CreateInterviewForm, {\n      onClose: () => setIsFormVisible(false) // Hide form when canceled\n      ,\n      onInterviewCreated: handleInterviewCreated\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interviews-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scheduled Interviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), interviews.length > 0 ? interviews.map(interview => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), \" \", interview.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this), \" \", interview.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), \" \", interview.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)]\n      }, interview.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No interviews scheduled.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployerDashboard, \"bjFr5KSZdtgrjkLjJ8QtewAM/n8=\");\n_c = EmployerDashboard;\nexport default EmployerDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployerDashboard\");","map":{"version":3,"names":["React","useState","useEffect","InterviewService","CreateInterviewForm","jsxDEV","_jsxDEV","EmployerDashboard","_s","interviews","setInterviews","isFormVisible","setIsFormVisible","fetchInterviews","response","getInterviewsByEmployerId","data","error","console","handleInterviewCreated","newInterview","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onClose","onInterviewCreated","length","map","interview","date","time","location","id","_c","$RefreshReg$"],"sources":["C:/Users/kdigarse/Documents/interview_neww/src/pages/EmployerDashboard/EmployerDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport InterviewService from \"../../services/interviewService\";\r\nimport CreateInterviewForm from \"./CreateInterviewForm\";\r\nimport \"./EmployerDashboard.css\";\r\n\r\nconst EmployerDashboard = () => {\r\n  const [interviews, setInterviews] = useState([]);\r\n  const [isFormVisible, setIsFormVisible] = useState(false);\r\n\r\n  // Fetch interviews for the employer\r\n  const fetchInterviews = async () => {\r\n    try {\r\n      const response = await InterviewService.getInterviewsByEmployerId(1); // Replace with employer ID\r\n      setInterviews(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching interviews:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInterviews();\r\n  }, []);\r\n\r\n  // Function to handle interview creation\r\n  const handleInterviewCreated = (newInterview) => {\r\n    setInterviews((prev) => [...prev, newInterview]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"employer-dashboard\">\r\n      <h1>Employer Dashboard</h1>\r\n      <button\r\n        className=\"create-btn\"\r\n        onClick={() => setIsFormVisible(true)} // Show form on button click\r\n      >\r\n        Create Interview\r\n      </button>\r\n\r\n      {isFormVisible && (\r\n        <CreateInterviewForm\r\n          onClose={() => setIsFormVisible(false)} // Hide form when canceled\r\n          onInterviewCreated={handleInterviewCreated}\r\n        />\r\n      )}\r\n\r\n      <div className=\"interviews-list\">\r\n        <h2>Scheduled Interviews</h2>\r\n        {interviews.length > 0 ? (\r\n          interviews.map((interview) => (\r\n            <div className=\"interview-card\" key={interview.id}>\r\n              <p>\r\n                <strong>Date:</strong> {interview.date}\r\n              </p>\r\n              <p>\r\n                <strong>Time:</strong> {interview.time}\r\n              </p>\r\n              <p>\r\n                <strong>Location:</strong> {interview.location}\r\n              </p>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No interviews scheduled.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}