{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:8080/api/interviews\";\nexport const getInterviews = async () => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error fetching interviews:\", error);\n    throw error;\n  }\n};\nexport const addInterview = async interview => {\n  try {\n    const response = await axios.post(API_URL, interview);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error adding interview:\", error);\n    throw error;\n  }\n};\nexport const updateInterview = async (id, updatedInterview) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, updatedInterview);\n    return response.data;\n  } catch (error) {\n    console.error(\"Error updating interview:\", error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","API_URL","getInterviews","response","get","data","error","console","addInterview","interview","post","updateInterview","id","updatedInterview","put"],"sources":["C:/Users/kdigarse/Documents/interview_new/src/services/interviewService.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://localhost:8080/api/interviews\";\r\n\r\nexport const getInterviews = async () => {\r\n  try {\r\n    const response = await axios.get(API_URL);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error fetching interviews:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const addInterview = async (interview) => {\r\n  try {\r\n    const response = await axios.post(API_URL, interview);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error adding interview:\", error);\r\n    throw error;\r\n  }\r\n};\r\n\r\nexport const updateInterview = async (id, updatedInterview) => {\r\n  try {\r\n    const response = await axios.put(`${API_URL}/${id}`, updatedInterview);\r\n    return response.data;\r\n  } catch (error) {\r\n    console.error(\"Error updating interview:\", error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,sCAAsC;AAEtD,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;IACzC,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IAClD,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAME,YAAY,GAAG,MAAOC,SAAS,IAAK;EAC/C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACU,IAAI,CAACT,OAAO,EAAEQ,SAAS,CAAC;IACrD,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IAC/C,MAAMA,KAAK;EACb;AACF,CAAC;AAED,OAAO,MAAMK,eAAe,GAAG,MAAAA,CAAOC,EAAE,EAAEC,gBAAgB,KAAK;EAC7D,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACc,GAAG,CAAC,GAAGb,OAAO,IAAIW,EAAE,EAAE,EAAEC,gBAAgB,CAAC;IACtE,OAAOV,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACjD,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}