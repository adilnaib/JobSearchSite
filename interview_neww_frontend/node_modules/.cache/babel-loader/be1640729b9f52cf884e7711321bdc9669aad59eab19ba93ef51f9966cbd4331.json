{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kdigarse\\\\Documents\\\\interview_neww\\\\src\\\\pages\\\\EmployerDashboard\\\\EmployerDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport interviewService from \"../../services/interviewService\";\nimport CreateInterviewForm from \"./CreateInterviewForm\";\nimport \"./EmployerDashboard.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployerDashboard = () => {\n  _s();\n  const [interviews, setInterviews] = useState([]);\n  const [showForm, setShowForm] = useState(false);\n  const employerId = 1; // Replace with the actual employer ID\n\n  // Fetch interviews scheduled by the employer\n  const fetchInterviews = async () => {\n    try {\n      const response = await interviewService.getInterviewsByEmployerId(employerId);\n      setInterviews(response.data);\n    } catch (error) {\n      console.error(\"Error fetching interviews:\", error);\n    }\n  };\n  useEffect(() => {\n    fetchInterviews();\n  }, []);\n\n  // Cancel an interview\n  const handleCancelInterview = async interviewId => {\n    try {\n      await interviewService.cancelInterview(interviewId);\n      alert(\"Interview cancelled successfully!\");\n      fetchInterviews(); // Refresh the list\n    } catch (error) {\n      console.error(\"Error cancelling interview:\", error);\n      alert(\"Failed to cancel the interview.\");\n    }\n  };\n\n  // Toggle the Create Interview Form\n  const toggleForm = () => {\n    setShowForm(prev => !prev);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employer-dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Employer Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"create-interview-btn\",\n      onClick: toggleForm,\n      children: showForm ? \"Hide Create Interview Form\" : \"Create Interview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), showForm && /*#__PURE__*/_jsxDEV(CreateInterviewForm, {\n      onInterviewAdded: () => {\n        fetchInterviews();\n        setShowForm(false);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Scheduled Interviews\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), interviews.length > 0 ? interviews.map(interview => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"interview-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: [\"Interview ID: \", interview.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Mode:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, this), \" \", interview.interviewMode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), \" \", interview.interviewType]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), \" \", interview.date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Time:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, this), \" \", interview.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"cancel-btn\",\n          onClick: () => handleCancelInterview(interview.id),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"details-btn\",\n          onClick: () => alert(`Details: ${JSON.stringify(interview)}`),\n          children: \"View Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reschedule-btn\",\n          onClick: () => alert(\"Reschedule feature coming soon!\"),\n          children: \"Reschedule\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, interview.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No interviews scheduled yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployerDashboard, \"84Cl+/l7hzJSsm168cdJwa4rjK0=\");\n_c = EmployerDashboard;\nexport default EmployerDashboard;\nvar _c;\n$RefreshReg$(_c, \"EmployerDashboard\");","map":{"version":3,"names":["React","useEffect","useState","interviewService","CreateInterviewForm","jsxDEV","_jsxDEV","EmployerDashboard","_s","interviews","setInterviews","showForm","setShowForm","employerId","fetchInterviews","response","getInterviewsByEmployerId","data","error","console","handleCancelInterview","interviewId","cancelInterview","alert","toggleForm","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onInterviewAdded","length","map","interview","id","interviewMode","interviewType","date","time","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/kdigarse/Documents/interview_neww/src/pages/EmployerDashboard/EmployerDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport interviewService from \"../../services/interviewService\";\r\nimport CreateInterviewForm from \"./CreateInterviewForm\";\r\nimport \"./EmployerDashboard.css\";\r\n\r\nconst EmployerDashboard = () => {\r\n  const [interviews, setInterviews] = useState([]);\r\n  const [showForm, setShowForm] = useState(false);\r\n  const employerId = 1; // Replace with the actual employer ID\r\n\r\n  // Fetch interviews scheduled by the employer\r\n  const fetchInterviews = async () => {\r\n    try {\r\n      const response = await interviewService.getInterviewsByEmployerId(\r\n        employerId\r\n      );\r\n      setInterviews(response.data);\r\n    } catch (error) {\r\n      console.error(\"Error fetching interviews:\", error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchInterviews();\r\n  }, []);\r\n\r\n  // Cancel an interview\r\n  const handleCancelInterview = async (interviewId) => {\r\n    try {\r\n      await interviewService.cancelInterview(interviewId);\r\n      alert(\"Interview cancelled successfully!\");\r\n      fetchInterviews(); // Refresh the list\r\n    } catch (error) {\r\n      console.error(\"Error cancelling interview:\", error);\r\n      alert(\"Failed to cancel the interview.\");\r\n    }\r\n  };\r\n\r\n  // Toggle the Create Interview Form\r\n  const toggleForm = () => {\r\n    setShowForm((prev) => !prev);\r\n  };\r\n\r\n  return (\r\n    <div className=\"employer-dashboard\">\r\n      <h1>Employer Dashboard</h1>\r\n      <button className=\"create-interview-btn\" onClick={toggleForm}>\r\n        {showForm ? \"Hide Create Interview Form\" : \"Create Interview\"}\r\n      </button>\r\n\r\n      {showForm && (\r\n        <CreateInterviewForm\r\n          onInterviewAdded={() => {\r\n            fetchInterviews();\r\n            setShowForm(false);\r\n          }}\r\n        />\r\n      )}\r\n\r\n      <div>\r\n        <h2>Scheduled Interviews</h2>\r\n        {interviews.length > 0 ? (\r\n          interviews.map((interview) => (\r\n            <div key={interview.id} className=\"interview-card\">\r\n              <h3>Interview ID: {interview.id}</h3>\r\n              <p>\r\n                <strong>Mode:</strong> {interview.interviewMode}\r\n              </p>\r\n              <p>\r\n                <strong>Type:</strong> {interview.interviewType}\r\n              </p>\r\n              <p>\r\n                <strong>Date:</strong> {interview.date}\r\n              </p>\r\n              <p>\r\n                <strong>Time:</strong> {interview.time}\r\n              </p>\r\n              <button\r\n                className=\"cancel-btn\"\r\n                onClick={() => handleCancelInterview(interview.id)}\r\n              >\r\n                Cancel\r\n              </button>\r\n              <button\r\n                className=\"details-btn\"\r\n                onClick={() => alert(`Details: ${JSON.stringify(interview)}`)}\r\n              >\r\n                View Details\r\n              </button>\r\n              <button\r\n                className=\"reschedule-btn\"\r\n                onClick={() => alert(\"Reschedule feature coming soon!\")}\r\n              >\r\n                Reschedule\r\n              </button>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No interviews scheduled yet.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployerDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}